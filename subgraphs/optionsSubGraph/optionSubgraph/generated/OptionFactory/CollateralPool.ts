// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddFee extends ethereum.Event {
  get params(): AddFee__Params {
    return new AddFee__Params(this);
  }
}

export class AddFee__Params {
  _event: AddFee;

  constructor(event: AddFee) {
    this._event = event;
  }

  get settlement(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get payback(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RedeemFee extends ethereum.Event {
  get params(): RedeemFee__Params {
    return new RedeemFee__Params(this);
  }
}

export class RedeemFee__Params {
  _event: RedeemFee;

  constructor(event: RedeemFee) {
    this._event = event;
  }

  get recieptor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get settlement(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get payback(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TransferPayback extends ethereum.Event {
  get params(): TransferPayback__Params {
    return new TransferPayback__Params(this);
  }
}

export class TransferPayback__Params {
  _event: TransferPayback;

  constructor(event: TransferPayback) {
    this._event = event;
  }

  get recieptor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get settlement(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get payback(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollateralPool__getAllFeeBalancesResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class CollateralPool__getCollateralAndPremiumBalancesResult {
  value0: Array<BigInt>;
  value1: Array<BigInt>;

  constructor(value0: Array<BigInt>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class CollateralPool extends ethereum.SmartContract {
  static bind(address: Address): CollateralPool {
    return new CollateralPool("CollateralPool", address);
  }

  addTransactionFee(param0: Address, param1: BigInt, param2: BigInt): BigInt {
    let result = super.call(
      "addTransactionFee",
      "addTransactionFee(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_addTransactionFee(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addTransactionFee",
      "addTransactionFee(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateFee(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "calculateFee",
      "calculateFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateFee(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateFee",
      "calculateFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkAddressPermission(tmpAddress: Address, state: BigInt): boolean {
    let result = super.call(
      "checkAddressPermission",
      "checkAddressPermission(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(tmpAddress),
        ethereum.Value.fromUnsignedBigInt(state)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkAddressPermission(
    tmpAddress: Address,
    state: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkAddressPermission",
      "checkAddressPermission(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(tmpAddress),
        ethereum.Value.fromUnsignedBigInt(state)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  delegateToImplementation(data: Bytes): Bytes {
    let result = super.call(
      "delegateToImplementation",
      "delegateToImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );

    return result[0].toBytes();
  }

  try_delegateToImplementation(data: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "delegateToImplementation",
      "delegateToImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  delegateToViewImplementation(data: Bytes): Bytes {
    let result = super.call(
      "delegateToViewImplementation",
      "delegateToViewImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );

    return result[0].toBytes();
  }

  try_delegateToViewImplementation(data: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "delegateToViewImplementation",
      "delegateToViewImplementation(bytes):(bytes)",
      [ethereum.Value.fromBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAllFeeBalances(): CollateralPool__getAllFeeBalancesResult {
    let result = super.call(
      "getAllFeeBalances",
      "getAllFeeBalances():(address[],uint256[])",
      []
    );

    return new CollateralPool__getAllFeeBalancesResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_getAllFeeBalances(): ethereum.CallResult<
    CollateralPool__getAllFeeBalancesResult
  > {
    let result = super.tryCall(
      "getAllFeeBalances",
      "getAllFeeBalances():(address[],uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CollateralPool__getAllFeeBalancesResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  getAllRealBalance(param0: Array<Address>): Array<BigInt> {
    let result = super.call(
      "getAllRealBalance",
      "getAllRealBalance(address[]):(int256[])",
      [ethereum.Value.fromAddressArray(param0)]
    );

    return result[0].toBigIntArray();
  }

  try_getAllRealBalance(
    param0: Array<Address>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAllRealBalance",
      "getAllRealBalance(address[]):(int256[])",
      [ethereum.Value.fromAddressArray(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getCollateralAndPremiumBalances(
    param0: Address,
    param1: BigInt,
    param2: Array<Address>,
    param3: Array<BigInt>,
    param4: Array<BigInt>
  ): CollateralPool__getCollateralAndPremiumBalancesResult {
    let result = super.call(
      "getCollateralAndPremiumBalances",
      "getCollateralAndPremiumBalances(address,uint256,address[],uint256[],uint256[]):(uint256[],uint256[])",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddressArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromUnsignedBigIntArray(param4)
      ]
    );

    return new CollateralPool__getCollateralAndPremiumBalancesResult(
      result[0].toBigIntArray(),
      result[1].toBigIntArray()
    );
  }

  try_getCollateralAndPremiumBalances(
    param0: Address,
    param1: BigInt,
    param2: Array<Address>,
    param3: Array<BigInt>,
    param4: Array<BigInt>
  ): ethereum.CallResult<
    CollateralPool__getCollateralAndPremiumBalancesResult
  > {
    let result = super.tryCall(
      "getCollateralAndPremiumBalances",
      "getCollateralAndPremiumBalances(address,uint256,address[],uint256[],uint256[]):(uint256[],uint256[])",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddressArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromUnsignedBigIntArray(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CollateralPool__getCollateralAndPremiumBalancesResult(
        value[0].toBigIntArray(),
        value[1].toBigIntArray()
      )
    );
  }

  getCollateralBalance(param0: Address): BigInt {
    let result = super.call(
      "getCollateralBalance",
      "getCollateralBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_getCollateralBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollateralBalance",
      "getCollateralBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeBalance(param0: Address): BigInt {
    let result = super.call(
      "getFeeBalance",
      "getFeeBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_getFeeBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFeeBalance",
      "getFeeBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeRate(param0: BigInt): BigInt {
    let result = super.call("getFeeRate", "getFeeRate(uint256):(uint32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_getFeeRate(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getFeeRate", "getFeeRate(uint256):(uint32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeRateAll(): Array<BigInt> {
    let result = super.call("getFeeRateAll", "getFeeRateAll():(uint32[])", []);

    return result[0].toBigIntArray();
  }

  try_getFeeRateAll(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getFeeRateAll",
      "getFeeRateAll():(uint32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getImplementation(): Address {
    let result = super.call(
      "getImplementation",
      "getImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getImplementation",
      "getImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getManager(): Address {
    let result = super.call("getManager", "getManager():(address)", []);

    return result[0].toAddress();
  }

  try_getManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("getManager", "getManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getNetWorthBalance(param0: Address): BigInt {
    let result = super.call(
      "getNetWorthBalance",
      "getNetWorthBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_getNetWorthBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNetWorthBalance",
      "getNetWorthBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOperator(): Array<Address> {
    let result = super.call("getOperator", "getOperator():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getOperator(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getOperator", "getOperator():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getOptionsPoolAddress(): Address {
    let result = super.call(
      "getOptionsPoolAddress",
      "getOptionsPoolAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getOptionsPoolAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getOptionsPoolAddress",
      "getOptionsPoolAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRealBalance(param0: Address): BigInt {
    let result = super.call(
      "getRealBalance",
      "getRealBalance(address):(int256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_getRealBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRealBalance",
      "getRealBalance(address):(int256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserInputCollateral(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "getUserInputCollateral",
      "getUserInputCollateral(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_getUserInputCollateral(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserInputCollateral",
      "getUserInputCollateral(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserPayingUsd(param0: Address): BigInt {
    let result = super.call(
      "getUserPayingUsd",
      "getUserPayingUsd(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_getUserPayingUsd(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserPayingUsd",
      "getUserPayingUsd(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWhiteList(): Array<Address> {
    let result = super.call("getWhiteList", "getWhiteList():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getWhiteList(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getWhiteList",
      "getWhiteList():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isEligibleAddress(tmpAddress: Address): boolean {
    let result = super.call(
      "isEligibleAddress",
      "isEligibleAddress(address):(bool)",
      [ethereum.Value.fromAddress(tmpAddress)]
    );

    return result[0].toBoolean();
  }

  try_isEligibleAddress(tmpAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isEligibleAddress",
      "isEligibleAddress(address):(bool)",
      [ethereum.Value.fromAddress(tmpAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  removeOperator(removeAddress: Address): boolean {
    let result = super.call(
      "removeOperator",
      "removeOperator(address):(bool)",
      [ethereum.Value.fromAddress(removeAddress)]
    );

    return result[0].toBoolean();
  }

  try_removeOperator(removeAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "removeOperator",
      "removeOperator(address):(bool)",
      [ethereum.Value.fromAddress(removeAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  removeWhiteList(removeAddress: Address): boolean {
    let result = super.call(
      "removeWhiteList",
      "removeWhiteList(address):(bool)",
      [ethereum.Value.fromAddress(removeAddress)]
    );

    return result[0].toBoolean();
  }

  try_removeWhiteList(removeAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "removeWhiteList",
      "removeWhiteList(address):(bool)",
      [ethereum.Value.fromAddress(removeAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get implementation_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get optionsPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AddCollateralBalanceCall extends ethereum.Call {
  get inputs(): AddCollateralBalanceCall__Inputs {
    return new AddCollateralBalanceCall__Inputs(this);
  }

  get outputs(): AddCollateralBalanceCall__Outputs {
    return new AddCollateralBalanceCall__Outputs(this);
  }
}

export class AddCollateralBalanceCall__Inputs {
  _call: AddCollateralBalanceCall;

  constructor(call: AddCollateralBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddCollateralBalanceCall__Outputs {
  _call: AddCollateralBalanceCall;

  constructor(call: AddCollateralBalanceCall) {
    this._call = call;
  }
}

export class AddNetBalanceCall extends ethereum.Call {
  get inputs(): AddNetBalanceCall__Inputs {
    return new AddNetBalanceCall__Inputs(this);
  }

  get outputs(): AddNetBalanceCall__Outputs {
    return new AddNetBalanceCall__Outputs(this);
  }
}

export class AddNetBalanceCall__Inputs {
  _call: AddNetBalanceCall;

  constructor(call: AddNetBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddNetBalanceCall__Outputs {
  _call: AddNetBalanceCall;

  constructor(call: AddNetBalanceCall) {
    this._call = call;
  }
}

export class AddNetWorthBalanceCall extends ethereum.Call {
  get inputs(): AddNetWorthBalanceCall__Inputs {
    return new AddNetWorthBalanceCall__Inputs(this);
  }

  get outputs(): AddNetWorthBalanceCall__Outputs {
    return new AddNetWorthBalanceCall__Outputs(this);
  }
}

export class AddNetWorthBalanceCall__Inputs {
  _call: AddNetWorthBalanceCall;

  constructor(call: AddNetWorthBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddNetWorthBalanceCall__Outputs {
  _call: AddNetWorthBalanceCall;

  constructor(call: AddNetWorthBalanceCall) {
    this._call = call;
  }
}

export class AddOperatorCall extends ethereum.Call {
  get inputs(): AddOperatorCall__Inputs {
    return new AddOperatorCall__Inputs(this);
  }

  get outputs(): AddOperatorCall__Outputs {
    return new AddOperatorCall__Outputs(this);
  }
}

export class AddOperatorCall__Inputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }

  get addAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOperatorCall__Outputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }
}

export class AddTransactionFeeCall extends ethereum.Call {
  get inputs(): AddTransactionFeeCall__Inputs {
    return new AddTransactionFeeCall__Inputs(this);
  }

  get outputs(): AddTransactionFeeCall__Outputs {
    return new AddTransactionFeeCall__Outputs(this);
  }
}

export class AddTransactionFeeCall__Inputs {
  _call: AddTransactionFeeCall;

  constructor(call: AddTransactionFeeCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddTransactionFeeCall__Outputs {
  _call: AddTransactionFeeCall;

  constructor(call: AddTransactionFeeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddUserInputCollateralCall extends ethereum.Call {
  get inputs(): AddUserInputCollateralCall__Inputs {
    return new AddUserInputCollateralCall__Inputs(this);
  }

  get outputs(): AddUserInputCollateralCall__Outputs {
    return new AddUserInputCollateralCall__Outputs(this);
  }
}

export class AddUserInputCollateralCall__Inputs {
  _call: AddUserInputCollateralCall;

  constructor(call: AddUserInputCollateralCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddUserInputCollateralCall__Outputs {
  _call: AddUserInputCollateralCall;

  constructor(call: AddUserInputCollateralCall) {
    this._call = call;
  }
}

export class AddUserPayingUsdCall extends ethereum.Call {
  get inputs(): AddUserPayingUsdCall__Inputs {
    return new AddUserPayingUsdCall__Inputs(this);
  }

  get outputs(): AddUserPayingUsdCall__Outputs {
    return new AddUserPayingUsdCall__Outputs(this);
  }
}

export class AddUserPayingUsdCall__Inputs {
  _call: AddUserPayingUsdCall;

  constructor(call: AddUserPayingUsdCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddUserPayingUsdCall__Outputs {
  _call: AddUserPayingUsdCall;

  constructor(call: AddUserPayingUsdCall) {
    this._call = call;
  }
}

export class AddWhiteListCall extends ethereum.Call {
  get inputs(): AddWhiteListCall__Inputs {
    return new AddWhiteListCall__Inputs(this);
  }

  get outputs(): AddWhiteListCall__Outputs {
    return new AddWhiteListCall__Outputs(this);
  }
}

export class AddWhiteListCall__Inputs {
  _call: AddWhiteListCall;

  constructor(call: AddWhiteListCall) {
    this._call = call;
  }

  get addAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddWhiteListCall__Outputs {
  _call: AddWhiteListCall;

  constructor(call: AddWhiteListCall) {
    this._call = call;
  }
}

export class BuyOptionsPayforCall extends ethereum.Call {
  get inputs(): BuyOptionsPayforCall__Inputs {
    return new BuyOptionsPayforCall__Inputs(this);
  }

  get outputs(): BuyOptionsPayforCall__Outputs {
    return new BuyOptionsPayforCall__Outputs(this);
  }
}

export class BuyOptionsPayforCall__Inputs {
  _call: BuyOptionsPayforCall;

  constructor(call: BuyOptionsPayforCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyOptionsPayforCall__Outputs {
  _call: BuyOptionsPayforCall;

  constructor(call: BuyOptionsPayforCall) {
    this._call = call;
  }
}

export class CalSharedPaymentCall extends ethereum.Call {
  get inputs(): CalSharedPaymentCall__Inputs {
    return new CalSharedPaymentCall__Inputs(this);
  }

  get outputs(): CalSharedPaymentCall__Outputs {
    return new CalSharedPaymentCall__Outputs(this);
  }
}

export class CalSharedPaymentCall__Inputs {
  _call: CalSharedPaymentCall;

  constructor(call: CalSharedPaymentCall) {
    this._call = call;
  }

  get value0(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class CalSharedPaymentCall__Outputs {
  _call: CalSharedPaymentCall;

  constructor(call: CalSharedPaymentCall) {
    this._call = call;
  }
}

export class DelegateToImplementationCall extends ethereum.Call {
  get inputs(): DelegateToImplementationCall__Inputs {
    return new DelegateToImplementationCall__Inputs(this);
  }

  get outputs(): DelegateToImplementationCall__Outputs {
    return new DelegateToImplementationCall__Outputs(this);
  }
}

export class DelegateToImplementationCall__Inputs {
  _call: DelegateToImplementationCall;

  constructor(call: DelegateToImplementationCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DelegateToImplementationCall__Outputs {
  _call: DelegateToImplementationCall;

  constructor(call: DelegateToImplementationCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ModifyPermissionCall extends ethereum.Call {
  get inputs(): ModifyPermissionCall__Inputs {
    return new ModifyPermissionCall__Inputs(this);
  }

  get outputs(): ModifyPermissionCall__Outputs {
    return new ModifyPermissionCall__Outputs(this);
  }
}

export class ModifyPermissionCall__Inputs {
  _call: ModifyPermissionCall;

  constructor(call: ModifyPermissionCall) {
    this._call = call;
  }

  get addAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permission(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyPermissionCall__Outputs {
  _call: ModifyPermissionCall;

  constructor(call: ModifyPermissionCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RedeemAllCall extends ethereum.Call {
  get inputs(): RedeemAllCall__Inputs {
    return new RedeemAllCall__Inputs(this);
  }

  get outputs(): RedeemAllCall__Outputs {
    return new RedeemAllCall__Outputs(this);
  }
}

export class RedeemAllCall__Inputs {
  _call: RedeemAllCall;

  constructor(call: RedeemAllCall) {
    this._call = call;
  }
}

export class RedeemAllCall__Outputs {
  _call: RedeemAllCall;

  constructor(call: RedeemAllCall) {
    this._call = call;
  }
}

export class RemoveOperatorCall extends ethereum.Call {
  get inputs(): RemoveOperatorCall__Inputs {
    return new RemoveOperatorCall__Inputs(this);
  }

  get outputs(): RemoveOperatorCall__Outputs {
    return new RemoveOperatorCall__Outputs(this);
  }
}

export class RemoveOperatorCall__Inputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }

  get removeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOperatorCall__Outputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RemoveWhiteListCall extends ethereum.Call {
  get inputs(): RemoveWhiteListCall__Inputs {
    return new RemoveWhiteListCall__Inputs(this);
  }

  get outputs(): RemoveWhiteListCall__Outputs {
    return new RemoveWhiteListCall__Outputs(this);
  }
}

export class RemoveWhiteListCall__Inputs {
  _call: RemoveWhiteListCall;

  constructor(call: RemoveWhiteListCall) {
    this._call = call;
  }

  get removeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveWhiteListCall__Outputs {
  _call: RemoveWhiteListCall;

  constructor(call: RemoveWhiteListCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCollateralBalanceCall extends ethereum.Call {
  get inputs(): SetCollateralBalanceCall__Inputs {
    return new SetCollateralBalanceCall__Inputs(this);
  }

  get outputs(): SetCollateralBalanceCall__Outputs {
    return new SetCollateralBalanceCall__Outputs(this);
  }
}

export class SetCollateralBalanceCall__Inputs {
  _call: SetCollateralBalanceCall;

  constructor(call: SetCollateralBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCollateralBalanceCall__Outputs {
  _call: SetCollateralBalanceCall;

  constructor(call: SetCollateralBalanceCall) {
    this._call = call;
  }
}

export class SetHaltCall extends ethereum.Call {
  get inputs(): SetHaltCall__Inputs {
    return new SetHaltCall__Inputs(this);
  }

  get outputs(): SetHaltCall__Outputs {
    return new SetHaltCall__Outputs(this);
  }
}

export class SetHaltCall__Inputs {
  _call: SetHaltCall;

  constructor(call: SetHaltCall) {
    this._call = call;
  }

  get halt(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetHaltCall__Outputs {
  _call: SetHaltCall;

  constructor(call: SetHaltCall) {
    this._call = call;
  }
}

export class SetImplementationCall extends ethereum.Call {
  get inputs(): SetImplementationCall__Inputs {
    return new SetImplementationCall__Inputs(this);
  }

  get outputs(): SetImplementationCall__Outputs {
    return new SetImplementationCall__Outputs(this);
  }
}

export class SetImplementationCall__Inputs {
  _call: SetImplementationCall;

  constructor(call: SetImplementationCall) {
    this._call = call;
  }

  get implementation_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetImplementationCall__Outputs {
  _call: SetImplementationCall;

  constructor(call: SetImplementationCall) {
    this._call = call;
  }
}

export class SetManagerCall extends ethereum.Call {
  get inputs(): SetManagerCall__Inputs {
    return new SetManagerCall__Inputs(this);
  }

  get outputs(): SetManagerCall__Outputs {
    return new SetManagerCall__Outputs(this);
  }
}

export class SetManagerCall__Inputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }

  get managerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetManagerCall__Outputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }
}

export class SetNetWorthBalanceCall extends ethereum.Call {
  get inputs(): SetNetWorthBalanceCall__Inputs {
    return new SetNetWorthBalanceCall__Inputs(this);
  }

  get outputs(): SetNetWorthBalanceCall__Outputs {
    return new SetNetWorthBalanceCall__Outputs(this);
  }
}

export class SetNetWorthBalanceCall__Inputs {
  _call: SetNetWorthBalanceCall;

  constructor(call: SetNetWorthBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetNetWorthBalanceCall__Outputs {
  _call: SetNetWorthBalanceCall;

  constructor(call: SetNetWorthBalanceCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get addAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetOperatorsCall extends ethereum.Call {
  get inputs(): SetOperatorsCall__Inputs {
    return new SetOperatorsCall__Inputs(this);
  }

  get outputs(): SetOperatorsCall__Outputs {
    return new SetOperatorsCall__Outputs(this);
  }
}

export class SetOperatorsCall__Inputs {
  _call: SetOperatorsCall;

  constructor(call: SetOperatorsCall) {
    this._call = call;
  }

  get operators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetOperatorsCall__Outputs {
  _call: SetOperatorsCall;

  constructor(call: SetOperatorsCall) {
    this._call = call;
  }
}

export class SetOptionsPoolAddressCall extends ethereum.Call {
  get inputs(): SetOptionsPoolAddressCall__Inputs {
    return new SetOptionsPoolAddressCall__Inputs(this);
  }

  get outputs(): SetOptionsPoolAddressCall__Outputs {
    return new SetOptionsPoolAddressCall__Outputs(this);
  }
}

export class SetOptionsPoolAddressCall__Inputs {
  _call: SetOptionsPoolAddressCall;

  constructor(call: SetOptionsPoolAddressCall) {
    this._call = call;
  }

  get optionsPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOptionsPoolAddressCall__Outputs {
  _call: SetOptionsPoolAddressCall;

  constructor(call: SetOptionsPoolAddressCall) {
    this._call = call;
  }
}

export class SetSharedPaymentCall extends ethereum.Call {
  get inputs(): SetSharedPaymentCall__Inputs {
    return new SetSharedPaymentCall__Inputs(this);
  }

  get outputs(): SetSharedPaymentCall__Outputs {
    return new SetSharedPaymentCall__Outputs(this);
  }
}

export class SetSharedPaymentCall__Inputs {
  _call: SetSharedPaymentCall;

  constructor(call: SetSharedPaymentCall) {
    this._call = call;
  }

  get value0(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get value1(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetSharedPaymentCall__Outputs {
  _call: SetSharedPaymentCall;

  constructor(call: SetSharedPaymentCall) {
    this._call = call;
  }
}

export class SetTransactionFeeCall extends ethereum.Call {
  get inputs(): SetTransactionFeeCall__Inputs {
    return new SetTransactionFeeCall__Inputs(this);
  }

  get outputs(): SetTransactionFeeCall__Outputs {
    return new SetTransactionFeeCall__Outputs(this);
  }
}

export class SetTransactionFeeCall__Inputs {
  _call: SetTransactionFeeCall;

  constructor(call: SetTransactionFeeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTransactionFeeCall__Outputs {
  _call: SetTransactionFeeCall;

  constructor(call: SetTransactionFeeCall) {
    this._call = call;
  }
}

export class SetUserInputCollateralCall extends ethereum.Call {
  get inputs(): SetUserInputCollateralCall__Inputs {
    return new SetUserInputCollateralCall__Inputs(this);
  }

  get outputs(): SetUserInputCollateralCall__Outputs {
    return new SetUserInputCollateralCall__Outputs(this);
  }
}

export class SetUserInputCollateralCall__Inputs {
  _call: SetUserInputCollateralCall;

  constructor(call: SetUserInputCollateralCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetUserInputCollateralCall__Outputs {
  _call: SetUserInputCollateralCall;

  constructor(call: SetUserInputCollateralCall) {
    this._call = call;
  }
}

export class SetUserPayingUsdCall extends ethereum.Call {
  get inputs(): SetUserPayingUsdCall__Inputs {
    return new SetUserPayingUsdCall__Inputs(this);
  }

  get outputs(): SetUserPayingUsdCall__Outputs {
    return new SetUserPayingUsdCall__Outputs(this);
  }
}

export class SetUserPayingUsdCall__Inputs {
  _call: SetUserPayingUsdCall;

  constructor(call: SetUserPayingUsdCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetUserPayingUsdCall__Outputs {
  _call: SetUserPayingUsdCall;

  constructor(call: SetUserPayingUsdCall) {
    this._call = call;
  }
}

export class SubCollateralBalanceCall extends ethereum.Call {
  get inputs(): SubCollateralBalanceCall__Inputs {
    return new SubCollateralBalanceCall__Inputs(this);
  }

  get outputs(): SubCollateralBalanceCall__Outputs {
    return new SubCollateralBalanceCall__Outputs(this);
  }
}

export class SubCollateralBalanceCall__Inputs {
  _call: SubCollateralBalanceCall;

  constructor(call: SubCollateralBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubCollateralBalanceCall__Outputs {
  _call: SubCollateralBalanceCall;

  constructor(call: SubCollateralBalanceCall) {
    this._call = call;
  }
}

export class SubNetWorthBalanceCall extends ethereum.Call {
  get inputs(): SubNetWorthBalanceCall__Inputs {
    return new SubNetWorthBalanceCall__Inputs(this);
  }

  get outputs(): SubNetWorthBalanceCall__Outputs {
    return new SubNetWorthBalanceCall__Outputs(this);
  }
}

export class SubNetWorthBalanceCall__Inputs {
  _call: SubNetWorthBalanceCall;

  constructor(call: SubNetWorthBalanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubNetWorthBalanceCall__Outputs {
  _call: SubNetWorthBalanceCall;

  constructor(call: SubNetWorthBalanceCall) {
    this._call = call;
  }
}

export class SubUserInputCollateralCall extends ethereum.Call {
  get inputs(): SubUserInputCollateralCall__Inputs {
    return new SubUserInputCollateralCall__Inputs(this);
  }

  get outputs(): SubUserInputCollateralCall__Outputs {
    return new SubUserInputCollateralCall__Outputs(this);
  }
}

export class SubUserInputCollateralCall__Inputs {
  _call: SubUserInputCollateralCall;

  constructor(call: SubUserInputCollateralCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SubUserInputCollateralCall__Outputs {
  _call: SubUserInputCollateralCall;

  constructor(call: SubUserInputCollateralCall) {
    this._call = call;
  }
}

export class SubUserPayingUsdCall extends ethereum.Call {
  get inputs(): SubUserPayingUsdCall__Inputs {
    return new SubUserPayingUsdCall__Inputs(this);
  }

  get outputs(): SubUserPayingUsdCall__Outputs {
    return new SubUserPayingUsdCall__Outputs(this);
  }
}

export class SubUserPayingUsdCall__Inputs {
  _call: SubUserPayingUsdCall;

  constructor(call: SubUserPayingUsdCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubUserPayingUsdCall__Outputs {
  _call: SubUserPayingUsdCall;

  constructor(call: SubUserPayingUsdCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferPaybackCall extends ethereum.Call {
  get inputs(): TransferPaybackCall__Inputs {
    return new TransferPaybackCall__Inputs(this);
  }

  get outputs(): TransferPaybackCall__Outputs {
    return new TransferPaybackCall__Outputs(this);
  }
}

export class TransferPaybackCall__Inputs {
  _call: TransferPaybackCall;

  constructor(call: TransferPaybackCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferPaybackCall__Outputs {
  _call: TransferPaybackCall;

  constructor(call: TransferPaybackCall) {
    this._call = call;
  }
}

export class TransferPaybackAndFeeCall extends ethereum.Call {
  get inputs(): TransferPaybackAndFeeCall__Inputs {
    return new TransferPaybackAndFeeCall__Inputs(this);
  }

  get outputs(): TransferPaybackAndFeeCall__Outputs {
    return new TransferPaybackAndFeeCall__Outputs(this);
  }
}

export class TransferPaybackAndFeeCall__Inputs {
  _call: TransferPaybackAndFeeCall;

  constructor(call: TransferPaybackAndFeeCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TransferPaybackAndFeeCall__Outputs {
  _call: TransferPaybackAndFeeCall;

  constructor(call: TransferPaybackAndFeeCall) {
    this._call = call;
  }
}

export class TransferPaybackBalancesCall extends ethereum.Call {
  get inputs(): TransferPaybackBalancesCall__Inputs {
    return new TransferPaybackBalancesCall__Inputs(this);
  }

  get outputs(): TransferPaybackBalancesCall__Outputs {
    return new TransferPaybackBalancesCall__Outputs(this);
  }
}

export class TransferPaybackBalancesCall__Inputs {
  _call: TransferPaybackBalancesCall;

  constructor(call: TransferPaybackBalancesCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get value5(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class TransferPaybackBalancesCall__Outputs {
  _call: TransferPaybackBalancesCall;

  constructor(call: TransferPaybackBalancesCall) {
    this._call = call;
  }
}
