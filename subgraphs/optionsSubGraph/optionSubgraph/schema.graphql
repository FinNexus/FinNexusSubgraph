type EntityOptionManager @entity {
  id: ID!
}

type EntityOptionPool @entity {
  id: ID!
}

type EntityBuyOptionHashId @entity {
  id: ID!
  BuyHash: ID!
}

type EntityBuyOptionItem @entity {
  id: ID!
  Optionid: Int
  Owner: Bytes!
  OptType: Int       #0 for call, 1 for put
  Underlying: BigInt    #underlying ID, 1 for BTC,2 for ETH
  OptionPrice: BigInt  #buyInfoMap[optionid]/100000000,
  Settlement: Bytes     #settle[optionextra[0].toLowerCase()],    //user's settlement paying for option.
  Expiration: BigInt    #getDate(option[4]), //
  Amount: BigInt        #web3.utils.fromWei(new BN(option[6])),
  StrikePrice: BigInt     #option[5]/100000000,   //  strike price
  UnderLyingPrice: BigInt #optionextra[2]/100000000,
  CreatedTime: BigInt     #getDate(blk.timestamp),
  CurrentWorth: BigInt    #web3.utils.fromWei(new BN(worth))/100000000 +"(USD)"
  Fee: BigInt #fees
}

type EntityExcerciseOptionHashId @entity {
  id: ID!
  BuyHash: ID!
}

type EntityExcerciseOptionItem @entity {
  id: ID!
  Optionid: Int!
  ExerciseAmount: BigInt! #web3.utils.fromWei(new BN(sellAmount)),
  ExerciseBack: BigInt!  #web3.utils.fromWei(new BN(sellPay))/100000000+"(USD)",
  BuyPay: BigInt! #web3.utils.fromWei(new BN(sellAmount).mul(new BN(buyOptPrice)))/100000000 + "(USD)"
}

type EntityOptionItem @entity {
  id: ID!
  Date: BigInt!
  Status: String
  UnderlyingAssets: String
  Type: String
  Amount: BigInt
  UsdValue: BigInt
  StrikePrice: BigInt
  Premium: BigInt
  PL: BigInt
}

type EntityTotalTLV @entity {
  id: ID!
  TimeStamp: BigInt!
  TotalUsdValue: BigInt!
}

type EntityPoolTLV @entity {
  id: ID!
  TimeStamp: BigInt
  Token: Bytes
  Amout: BigInt
  UsdValue: BigInt
}

type EntityNetWorth @entity {
  id: ID!
  TimeStamp: BigInt!
  Pool: Bytes!
  NetWorth: BigInt!
}

type EntityActiveOption @entity {
  id: ID! #token + timeid as id
  TimeStamp: BigInt!
  Underlying: BigInt!
  CallAmount: BigInt!
  CallUsdValue: BigInt!
  PutAmount: BigInt!
  PutUsdValue: BigInt!
}

type EntityPremium @entity {
  id: ID!
  TimeStamp: BigInt!
  Token: Bytes
  CallAmount: BigInt
  CallUsdValue: BigInt
  PutAmount: BigInt
  PutUsdValue: BigInt
}

type EntityFee @entity {
  id: ID!
  TimeStamp: BigInt!
  Token: Bytes
  CallAmount: BigInt
  CallUsdValue: BigInt
  PutAmount: BigInt
  PutUsdValue: BigInt
}









