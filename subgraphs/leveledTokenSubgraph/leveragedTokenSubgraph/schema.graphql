type EntityLeveragePool @entity {
  id: ID!
  name: String
  underlyingAddress: Bytes
  underlyingName: String
}

type EntityLeverageFactory @entity {
  id: ID!
}

type EntityTradeItem @entity {
  id: ID!
  pool: Bytes!
  from: Bytes!
  timestamp: BigInt!
  status: String
  settlement: Bytes
  leverageToken: Bytes
  leveragetype: String
  value: BigInt!
  price: BigInt!
  amount: BigInt!
}

type EntityTotalTVL @entity {
  id: ID!
  timestamp: BigInt
  value: BigInt!
}

type EntityTVL @entity {
  id: ID!
  timestamp: BigInt
#  poolAddress: Bytes
  token: Bytes
  amount: BigInt!
  value: BigInt!
}

type EntityInterestAPY @entity {
  id: ID!
  timestamp: BigInt
  pool: Bytes
  token:  Bytes
  apy:  BigInt
}

type EntityTradeVol @entity {
  id: ID!
  timestamp: BigInt
  pool: Bytes
  buyLeverAmount: BigInt
  buyLeverValue: BigInt
  sellLeverAmount: BigInt
  sellLeverValue: BigInt
  buyHedgeAmount: BigInt
  buyHedgeValue: BigInt
  sellHedgeAmount: BigInt
  sellHedgeValue: BigInt
}

type EntityStakePool @entity {
  id: ID!
  underlyingAddress: Bytes
  underlyingName: String
  interestrate: BigInt
}

type EntityFee @entity {
  id: ID!
  timestamp: BigInt
  token: Bytes
  amount: BigInt!
  value: BigInt!
}

type EntityPrice @entity {
  id: ID!
  timestamp: BigInt
  pool: Bytes!
  leverageprice: BigInt!
  hedgeprice: BigInt!
}



