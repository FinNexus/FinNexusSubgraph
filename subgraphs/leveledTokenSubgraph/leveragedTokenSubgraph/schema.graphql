type LeveragedTokenPriceEntity @entity {
  id: ID!
  poolAddress:Bytes!
  uptokenprice: BigInt!
  downtokenprice: BigInt!
  timestamp: BigInt!
  network:String!
}

<<<<<<< HEAD
type leveragePool @entity {
=======
type LeveragedPool @entity {
>>>>>>> d0fcf85d9a2c03e214e1724e4f2a98898a6b94f5
  id: ID!
  name: String!
  underlyingAddress: Bytes!
  underlyingName: String!
}

type LeverageFactory @entity {
  id: ID!
}

type TradeItem @entity {
  id: ID!
  timestamp: BigInt!
  status: String!
  undetlying: Bytes!
  leveragetype: String!
  value: BigInt!
  price: BigInt!
  amount: BigInt!
}

type TVL @entity {
  id: ID!
  timestamp: BigInt!
  token: Bytes!
  amount: BigInt!
  value: BigInt!
}

type InterestAPY @entity {
  id: ID!
  timestamp: BigInt!
  token:  Bytes!
  amount: BigInt!
  value:  BigInt!
  apy:  BigInt!
}

type TradeVol @entity {
  id: ID!
  timestamp: BigInt!
  leveragetoken:  Bytes!
  amount: BigInt!
  value: BigInt!
}

type stakePool @entity {
  id: ID!
  underlyingAddress: Bytes!
  underlyingName: String!
  interestrate: BigInt!
}

type Fee @entity {
  id: ID!
  timestamp: BigInt!
  feetoken:  Bytes!
  amount: BigInt!
  value: BigInt!
}


